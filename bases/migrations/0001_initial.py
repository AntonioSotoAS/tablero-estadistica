# Generated by Django 5.1.4 on 2025-10-15 15:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='mae_est_sexos',
            fields=[
                ('f_aud', models.DateTimeField(auto_now=True, null=True)),
                ('b_aud', models.CharField(default='I', max_length=1, null=True)),
                ('c_aud_uid', models.CharField(blank=True, max_length=30, null=True)),
                ('c_aud_uidred', models.CharField(blank=True, max_length=30, null=True)),
                ('n_aud_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('c_aud_mcaddr', models.CharField(blank=True, max_length=17, null=True)),
                ('n_id_sexo', models.AutoField(primary_key=True, serialize=False)),
                ('x_descripcion', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'mae_est_sexos',
            },
        ),
        migrations.CreateModel(
            name='usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('x_dni', models.CharField(default='00000000', max_length=8, unique=True)),
                ('x_nombres', models.CharField(max_length=50)),
                ('x_app_paterno', models.CharField(max_length=40)),
                ('x_app_materno', models.CharField(max_length=40)),
                ('x_telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_image', models.ImageField(blank=True, default='img_perfil/perfil.png', null=True, upload_to='img_perfil/')),
                ('l_mensaje', models.BooleanField(default=False)),
                ('f_aud', models.DateTimeField(auto_now=True, null=True)),
                ('b_aud', models.CharField(default='I', max_length=1, null=True)),
                ('c_aud_uid', models.CharField(blank=True, max_length=30, null=True)),
                ('c_aud_uidred', models.CharField(blank=True, max_length=30, null=True)),
                ('n_aud_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('c_aud_mcaddr', models.CharField(blank=True, max_length=17, null=True)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('n_id_sexo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bases.mae_est_sexos')),
            ],
            options={
                'db_table': 'mae_est_usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='hst_usuario_accesos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('x_ip', models.GenericIPAddressField()),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hst_usuario_accesos',
            },
        ),
        migrations.CreateModel(
            name='mae_est_usuarios_groups',
            fields=[
                ('f_aud', models.DateTimeField(auto_now=True, null=True)),
                ('b_aud', models.CharField(default='I', max_length=1, null=True)),
                ('c_aud_uid', models.CharField(blank=True, max_length=30, null=True)),
                ('c_aud_uidred', models.CharField(blank=True, max_length=30, null=True)),
                ('n_aud_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('c_aud_mcaddr', models.CharField(blank=True, max_length=17, null=True)),
                ('n_id_usuario_group', models.AutoField(primary_key=True, serialize=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mae_est_usuarios_groups',
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(related_name='usuario_set', through='bases.mae_est_usuarios_groups', to='auth.group'),
        ),
    ]
